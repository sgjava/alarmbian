# Main
spring.main.banner-mode = off
spring.main.log-startup-info = false

# Let in flight requests complete 
server.shutdown = graceful
# Set scheduled task pool
spring.task.scheduling.pool.size = 2

# Database
spring.datasource.url = jdbc:h2:tcp://localhost/nio:test
spring.datasource.driverClassName = org.h2.Driver
spring.datasource.username = sa
spring.datasource.password = sa
# We run always, but script checks if objects exist first
spring.sql.init.mode = always

# Device
device.name = testcam
# Runtime https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html?is-external=true#parse-java.lang.CharSequence-
device.runtime = PT60M
# How often to run file/dir/db cleaner https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html?is-external=true#parse-java.lang.CharSequence-
device.clean.runtime = PT10M
# Age of files to keep in milliseconds (86400000 is one day)
device.clean.age = 86400000

# FFMPEG general
ffmpeg.bin = /usr/bin/
ffmpeg.container = mkv
ffmpeg.dir.pattern = MMddyyyy
ffmpeg.file.pattern = HHmmss
ffmpeg.output.path = /home/sgoldsmith/Downloads

# Mainstream is used to record 24/7 and should be max frame size and FPS
mainstream.name = h265+
mainstream.class = com.codeferm.alarmbian.image.FfmpegOut
#mainstream.device = rtsp://192.168.1.8:554/ipcam_h264.sdp
mainstream.device = rtsp://192.168.1.42:8554/sub1
mainstream.timeout = 10000
mainstream.file.suffix = main
mainstream.input.arg.1 = -rtsp_transport tcp
mainstream.input.arg.2 = -use_wallclock_as_timestamps 1
mainstream.input.arg.3 = -channel_layout mono
mainstream.output.arg.1 = -c copy
mainstream.output.arg.2 = -fflags nobuffer
mainstream.output.arg.3 = -hide_banner
mainstream.output.arg.4 = -loglevel warning
mainstream.length = 600000

# Substream is used for detection and should be 640x480 3 or 4 FPS
substream.name = h265
substream.class = com.codeferm.alarmbian.image.VideoIn
#substream.device = rtsp://192.168.1.8:554/ipcam.sdp
substream.device = rtsp://192.168.1.42:8554/sub1
substream.timeout = 10000
substream.input.arg.1 = -rtsp_transport tcp
substream.input.arg.2 = -use_wallclock_as_timestamps 1
substream.input.arg.3 = -channel_layout mono

# Motion detection
motion.class = com.codeferm.alarmbian.image.Motion
motion.ksize = 8,8
motion.alpha = 0.03
motion.black.threshold = 25.0
motion.max.threshold = 255.0
motion.max.change = 25.0
motion.start.threshold = 1.0
motion.stop.threshold = 0.0
motion.ignore.mask =

# Supported extensions https://docs.opencv.org/master/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56
history.writer.extension = .jpg

# Deepstack
deepstack.enabled = true
deepstack.url = http://localhost
deepstack.image.extension = .jpg
